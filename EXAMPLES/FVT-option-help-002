#!/bin/bash
#	hooks/EXAMPLES/FVT-option-help-002  3.399.640  2019-08-21T10:55:30.684157-05:00 (CDT)  https://github.com/BradleyA/user-files.git  uadmin  one-rpi3b.cptx86.com 3.398  
#	   hooks/EXAMPLES/FVT-option-help-002  testing TEST/FVT-option-help-002/SAST-shellcheck-001 
#	hooks/EXAMPLES/FVT-option-help-002  3.395.636  2019-08-21T10:31:10.017792-05:00 (CDT)  https://github.com/BradleyA/user-files.git  uadmin  one-rpi3b.cptx86.com 3.394
#	   hooks/EXAMPLES/FVT-option-help-002  added exit return codes 
### production standard 3.0 shellcheck
### production standard 5.1.160 Copyright
#       Copyright (c) 2019 Bradley Allen
#       MIT License is in the online DOCUMENTATION, DOCUMENTATION URL defined below.
###
### production standard 1.0 DEBUG variable
#       Order of precedence: environment variable, default code
if [ "${DEBUG}" == "" ] ; then DEBUG="0" ; fi   # 0 = debug off, 1 = debug on, 'export DEBUG=1', 'unset DEBUG' to unset environment variable (bash)
BOLD=$(tput -Txterm bold)
NORMAL=$(tput -Txterm sgr0)
#       Date and time function ISO 8601
get_date_stamp() {
DATE_STAMP=$(date +%Y-%m-%dT%H:%M:%S.%6N%:z)
TEMP=$(date +%Z)
DATE_STAMP="${DATE_STAMP} (${TEMP})"
}
#       Fully qualified domain name FQDN hostname
LOCALHOST=$(hostname -f)
#       Version
SCRIPT_VERSION=$(head -2 "${0}" | awk '{printf $3}')
if [ "${DEBUG}" == "1" ] ; then get_date_stamp ; echo -e "${NORMAL}${DATE_STAMP} ${LOCALHOST} ${0}[$$] ${SCRIPT_VERSION} ${LINENO} ${USER} ${USER_ID}:${GROUP_ID} ${BOLD}[DEBUG]${NORMAL}  Operation started." 1>&2 ; fi

###     Place test case here

"${1}" -help > "${0}".test-case-output

#       The option is functioning correctly:  if USAGE && DESCRIPTION && DOCUMENTATION appear in "${0}".test-case-output 
if grep -q 'USAGE' "${0}".test-case-output ; then
        if grep -q 'DESCRIPTION' "${0}".test-case-output  ; then
                if grep -q 'DOCUMENTATION' "${0}".test-case-output  ; then
                        echo "${BOLD}Test case --->${NORMAL} ${0} ${1} ${RETURN_CODE} - USAGE DESCRIPTION DOCUMENTATION found in output ${BOLD}PASS - PASS${NORMAL}"
			exit 0
                else
                        echo "${BOLD}Test case --->${NORMAL} ${0} ${1} ${RETURN_CODE} - DOCUMENTATION not found in output - ${BOLD}FAIL - FAIL${NORMAL}"
			exit 1
                fi
        else
                echo "${BOLD}Test case --->${NORMAL} ${0} ${1} ${RETURN_CODE} - DESCRIPTION not found in output - ${BOLD}FAIL - FAIL${NORMAL}"
		exit 1
        fi
else
        echo "${BOLD}Test case --->${NORMAL} ${0} ${1} ${RETURN_CODE} - USAGE not found in output - ${BOLD}FAIL - FAIL${NORMAL}"
	exit 1
fi
exit 124
###
