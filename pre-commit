#!/bin/bash
#	hooks/pre-commit  3.330.565  2019-08-17T22:25:02.075789-05:00 (CDT)  https://github.com/BradleyA/user-files.git  uadmin  one-rpi3b.cptx86.com 3.329  
#	   hooks/pre-commit hooks/post-commit add DEBUG Operation finished. 
#	hooks/pre-commit  3.302.528  2019-08-16T16:35:27.488939-05:00 (CDT)  https://github.com/BradleyA/user-files.git  uadmin  one-rpi3b.cptx86.com 3.301  
#	   hooks/pre-commit add SAST testing #26 
###
#	pre-commit - (git hook)  Create ${REPOSITORY_DIR}/hooks/COMMIT_FILE_LIST which includes files being commited
#
### production standard 3.0 shellcheck
### production standard 5.1.160 Copyright
#       Copyright (c) 2019 Bradley Allen
#       MIT License is in the online DOCUMENTATION
### production standard 1.0 DEBUG variable
#       Order of precedence: environment variable, default code
if [ "${DEBUG}" == "" ] ; then DEBUG="0" ; fi   # 0 = debug off, 1 = debug on, 'export DEBUG=1', 'unset DEBUG' to unset environment variable (bash)
BOLD=$(tput -Txterm bold)
NORMAL=$(tput -Txterm sgr0)
#       Date and time function ISO 8601
get_date_stamp() {
DATE_STAMP=$(date +%Y-%m-%dT%H:%M:%S.%6N%:z)
TEMP=$(date +%Z)
DATE_STAMP="${DATE_STAMP} (${TEMP})"
}
#       Fully qualified domain name FQDN hostname
LOCALHOST=$(hostname -f)
#       Version
SCRIPT_VERSION=$(head -2 "${0}" | awk '{printf $3}')

### production standard 10.0 TESTing
REPOSITORY_DIR=$(git rev-parse --show-toplevel)
cd "${REPOSITORY_DIR}"
if [ ! -d "${REPOSITORY_DIR}/hooks" ] ; then mkdir -p "${REPOSITORY_DIR}/hooks" ; fi
if [ "${DEBUG}" == "1" ] ; then get_date_stamp ; echo -e "${NORMAL}${DATE_STAMP} ${LOCALHOST} ${0}[$$] ${SCRIPT_VERSION} ${LINENO} ${USER} ${BOLD}[DEBUG]  Creating ${REPOSITORY_DIR}/hooks/COMMIT_FILE_LIST file includes files being commited${NORMAL} for ${GIT_AUTHOR_NAME} (${USER})." 1>&2 ; fi
git status -s --untracked-files=no | grep -v '^D  ' | awk '{print $2}' > "${REPOSITORY_DIR}"/hooks/COMMIT_FILE_LIST

#
if [ "${DEBUG}" == "1" ] ; then get_date_stamp ; echo -e "${NORMAL}${DATE_STAMP} ${LOCALHOST} ${0}[$$] ${SCRIPT_VERSION} ${LINENO} ${USER} ${USER_ID}:${GROUP_ID} ${BOLD}[DEBUG]${NORMAL}  Operation finished." 1>&2 ; fi
###
